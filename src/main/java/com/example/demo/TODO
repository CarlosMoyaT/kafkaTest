5. 🌐 Crear un controlador REST
Ubicación: .../controller/ObservationController.java

Endpoints sugeridos:

GET /api/observations → devuelve todas o las más recientes.

GET /api/observations?type=planet → filtrado por tipo.

(opcional) GET /api/observations/stats → estadísticas simples.

6. 🛰️ Crear un listener Kafka
Ubicación: .../kafka/ObservationListener.java

Escucha mensajes en un topic como "astro.observations".

Deserializa el mensaje a un Observation (o DTO).

Llama al servicio para guardar la observación en PostgreSQL.

7. 📈 Exponer métricas personalizadas
Ubicación: .../metrics/ObservationMetrics.java

Usa @Autowired MeterRegistry (de Micrometer) para:

Contar observaciones por tipo.

Calcular intensidad promedio (si quieres ir más allá).

Exponer métricas como:

astro_observations_total

astro_observations_by_type

astro_avg_intensity

8. 🧪 Pruebas (Opcional pero deseable)
Pruebas unitarias para servicio y repositorio.

Pruebas de integración para el listener Kafka.

9. 🧩 Prometheus + Grafana
Asegúrate de que tu Spring Boot expone /actuator/prometheus

Grafana: crea un dashboard con:

Conteo por tipo

Eventos por segundo

Gráfica de intensidad

