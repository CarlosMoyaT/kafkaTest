version: '3.8'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    container_name: postgres-iot
    restart: always
    environment:
      POSTGRES_USER: astro_user
      POSTGRES_PASSWORD: astro_pass
      POSTGRES_DB: astro_observations
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  observation-service:
    build: ./observation-service
    depends_on:
      - kafka
      - postgres
      - prometheus
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-iot:5432/astro_observations
      SPRING_DATASOURCE_USERNAME: astro_user
      SPRING_DATASOURCE_PASSWORD: astro_pass
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

volumes:
  pg_data:






